<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="author" content="Matthew DeVore">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>Technical Details</title>
<style type="text/css">
<!--
    P
    {
      font: 12pt "Times New Roman";
      text-align: left;
      margin: 0px;
      border: thin none black;
    }
  -->
</style>
</head>

<body link="#0000FF">

<p style="text-align: center; "><span style="font-style: italic; font-size: 14pt; ">Some Technical Details of
Andradion 2</span></p>

<p style="text-align: center; font-size: 8pt; ">by Matt DeVore (matt@jusenkyo.com)</p>

<p style="text-align: center; ">&nbsp;</p>

<p style="text-align: justify; ">Have you been enjoying the game?
(listens for an answer) . . . That's great! Now if you are
interested in how video games work in general, or how Andradion 2
works specifically, you can enjoy this document about how
Andradion 2 works. Granted, it's not a perfect system; I just
thought that some people were interested in stuff like this, so I
typed it up.</p>

<p style="text-align: justify; ">&nbsp;</p>

<p style="text-align: center; font-weight: bold; ">The CompactMap</p>

<p style="text-align: center; ">&nbsp;</p>

<p style="text-align: justify; ">Bear with me as I explain some
seemingly-random details, and then allow you to see more and more
of the big picture towards the end. The CompactMap is a file
format used to store bitmaps. It serves two purposes: to store
bitmaps in a compressed form, and store bitmaps in a form that
could be blitted to the screen relatively quickly. It does both
those things pretty well. How it works is it translates the
bitmap into a series of color blocks, patterns, and left-overs.</p>

<p style="text-align: justify; ">Color blocks are rectangles of
one color which can be put on the screen like that, which is
faster than copying a bitmap.</p>

<p style="text-align: justify; ">Patterns are pictures, or
bitmaps, which are found more than once in the translated bitmap.
For example, if the word &quot;Mississippi&quot; were typed into
a bitmap, and the correct parameters were supplied to the
CompactMap translator, three patterns would be generated: one for
the letter I, one for the letter S, and other for the letter P.
Only one instance of the letter would be concretely stored in the
CompactMap file. Then there would be a set of coordinates
specifying where to blit each instance of the pattern.</p>

<p style="text-align: justify; ">A true story: I once typed
&quot;Office&quot; into a level of Andradion 2, rotated it by 90
degrees, and fed the level through the translator without passing
any unique parameters. Part of the two F's in that word were
translated into a pattern. However, instances of a pattern do not
have to be adjacent in order to be registered; &quot;Ofifice&quot;
would have worked as well.</p>

<p style="text-align: justify; ">Leftovers are basically patterns
that have only one instance.</p>

<p style="text-align: justify; ">I designed this file format
because it was too late in the project to switch to a 100% tile-based
system (whereas everything is a pattern, and the artist has to
draw the patterns himself or herself). I did some thinking about
how to solve this, taking into account Doug's drawing style (the
guy who drew the levels), and came up with this format that I've
never heard of any game using before. E-mail me if you find the
info on this file format useful, or if you know of a similar
format used on a different game, please.</p>

<p style="text-align: justify; ">The CompactMap file format
stores pixel values in 24-bit color. In Andradion 2, when a level
is loaded, these 24-bit colors need to be translated to 8-bit
colors. This slows down loading a bit on old machines.</p>

<p style="text-align: justify; ">Each level is split up into
&quot;sectors,&quot; which are 160 pixels wide by 120 pixels high.
First, the bitmap which is drawn (using good ol' Microsoft Paint),
is split into bitmaps which are that size and correspond to the
sectors. Then each bitmap is translated into .cmp files, which
are of the CompactMap format, and then embedded into the .exe
file as resources. A resource is a method of taking pieces of
data, which could just as easily be put in seperate files, and
attaching it to the executable file. This saves disk space and
makes loading of the data faster. Lots of games do this, and even
more non-game applications as well.</p>

<p style="text-align: justify; ">Don't feel overwhelmed, even
though that was a lot of information. To summarize, conventional
bitmaps of the image are drawn, put in a fancy-schmancy format,
and then linked to the executable. Overall, it's a game of
efficiency.</p>

<p style="text-align: justify; ">The CompactMap is the format
that level pictures are stored as, and nothing else, in Andradion
2. This file format was not used in the demo of the game.</p>

<p style="text-align: justify; ">&nbsp;</p>

<p style="text-align: center; font-weight: bold; ">The
Introduction Screen</p>

<p style="text-align: center; ">&nbsp;</p>

<p style="text-align: justify; ">This is the part of the program
for which I did not plan ahead at all. Doesn't it have a bit of a
sloppy feel to it? Anyway, the stars in the background are just a
bunch of random dots. No predrawn bitmap. The picture of Mr.
Turner focused on by crosshairs is a bitmap, as is the text that
scrolls across the screen. In order to show it on the screen at a
slant, each row must be drawn one at a time. In addition to
drawing each row one at a time, they also have to be &quot;scaled,&quot;
which means stretch or squish so a bitmap takes up less or more
space on the screen. This is slow, and I couldn't think of any
quick fix for this, and that's why it is so choppy on many old
systems.</p>

<p style="text-align: justify; ">&nbsp;</p>

<p style="text-align: center; font-weight: bold; ">Level
Completion/Game Progress</p>

<p style="text-align: center; ">&nbsp;</p>

<p style="text-align: justify; ">Your game progress (what levels
you've finished and at what difficulty setting) is stored in a
file called &quot;Delete Me to Reset Game&quot;, and you can
delete it to reset the game to the begining, where only the first
level was available. You can also keep copies of the file
elsewhere, in case you want to save the progress of your friends
or family separate from yours. I didn't think very many people
cared about that, so I didn't build the functionality of profiles
into the game.</p>

<p style="text-align: justify; ">&nbsp;</p>

<p style="text-align: center; font-weight: bold; ">Multiplayer</p>

<p style="text-align: center; font-weight: bold; ">&nbsp;</p>

<p style="text-align: justify; font-weight: bold; "><span style="font-weight: normal; ">Multiplayer
has been disabled for the time being, despite the fact that its
details concerning its code and functionality are all certain.
Soon Multipayer will be back, better than ever.</span></p>

<p style="text-align: justify; ">&nbsp;</p>

<p style="text-align: center; font-weight: bold; ">Barriers/Walls</p>

<p style="text-align: center; font-weight: bold; ">&nbsp;</p>

<p style="text-align: justify; font-weight: bold; "><span style="font-weight: normal; ">In order to
prevent any characters from moving into places where they shouldn't
be, the program checks the path of anybody who's walking to see
if there are any black pixels in it. If there are, the character
can't move there. Some pixels are almost black, and they can be
walked through. This makes it look like I'm lying, but I'm not.
They're almost black, but not black, so they aren't really
barriers.</span></p>

<p style="text-align: justify; ">&nbsp;</p>

<p style="text-align: center; font-weight: bold; ">New Things I've
Been Thinking About</p>

<p style="text-align: center; font-weight: bold; ">&nbsp;</p>

<ul>
    <li class="Body-Text"
    style="text-align: justify; text-indent: 0px; margin-left: 0px; list-style-type: disc; ">I
        may be able to make the game look better be allowing
        characters to walk under things, whereas the character
        stands right behind something and so it is obstructed.
        This may be possible by expanding the current barriers/walls
        system so that it detects the position of the nearest
        black pixels beneath the character's waist, and not
        blitting the character below that point. </li>
    <li class="Body-Text"
    style="text-align: justify; text-indent: 0px; margin-left: 0px; list-style-type: disc; ">Run-length
        encoding the CompactMaps, so after it is compressed how
        it normally is by the translator, i.e. my way, it is
        again compressed like a zip file. This would make the
        final 12-level version of the game about three megabytes,
        half of what it is now. </li>
    <li class="Body-Text"
    style="text-align: justify; text-indent: 0px; margin-left: 0px; list-style-type: disc; ">Does
        the star of the game know anything about this project?
        Not as far as I know. </li>
</ul>

<p style="text-align: justify; ">&nbsp;</p>

<p style="text-align: justify; ">That's it--I can't think of much
more the layman would care about. If you want to know more, you
can request it by e-mailing me, and I will add that information
into this document in the next version of the game.</p>

<p style="text-align: justify; ">&nbsp;</p>
</body>
</html>
